A form field element has neither an id nor a name attribute. This might prevent the browser from correctly autofilling the form.

To fix this issue, add a unique id or name attribute to a form field. This is not strictly needed, but still recommended even if you have an autocomplete attribute on the same element.

22 resources
Learn more: The form input element
Content Security Policy of your site blocks the use of 'eval' in JavaScript`
The Content Security Policy (CSP) prevents the evaluation of arbitrary strings as JavaScript to make it more difficult for an attacker to inject unathorized code on your site.

To solve this issue, avoid using eval(), new Function(), setTimeout([string], ...) and setInterval([string], ...) for evaluating strings.

If you absolutely must: you can enable string evaluation by adding unsafe-eval as an allowed source in a script-src directive.

⚠️ Allowing string evaluation comes at the risk of inline script injection.

1 directive
Source location	Directive	Status
script-src	blocked
Learn more: Content Security Policy - Eval
Incorrect use of <label for=FORM_ELEMENT>
The label's for attribute doesn't match any element id. This might prevent the browser from correctly autofilling the form and accessibility tools from working correctly.

To fix this issue, make sure the label's for attribute references the correct id of a form field.

1 resource
Violating node
Learn more: The label elements
No label associated with a form field
A <label> isn't associated with a form field.

To fix this issue, nest the <input> in the <label> or provide a for attribute on the <label> that matches a form field id.

4 resources
Learn more: The label elements
Page layout may be unexpected due to Quirks Mode
One or more documents in this page is in Quirks Mode, which will render the affected document(s) with quirks incompatible with the current HTML and CSS specifications.

Quirks Mode exists mostly due to historical reasons. If this is not intentional, you can add or modify the DOCTYPE to be `<!DOCTYPE html>` to render the page in No Quirks Mode.

2 elements
Learn more: Document compatibility mode
Reading cookie in cross-site context may be impacted on Chrome
Cookies with the SameSite=None; Secure and not Partitioned attributes that operate in cross-site contexts are third-party cookies. Chrome is moving towards a new experience that allows users to choose to browse without third-party cookies.

Learn more from the linked article about preparing your site to avoid potential breakage.

42 cookies
1 request

 collect?v=2&tid=G-MPJY3F1YEL&gtm=45je5631v9135634466za200&_p=1749082013664&gcd=13l3l3l3l2l1&npa=0&dma=0&tag_exp=101509157~103116026~103200004~103233427~103351869~103351871~104611962~104611964~104661466~104661468&ul=en-us&sr=1512x982&cid=1982402699.1749082005&ecid=1554867120&ir=1&uaa=arm&uab=64&uafvl=Google%2520Chrome%3B135.0.7049.115%7CNot-A.Brand%3B8.0.0.0%7CChromium%3B135.0.7049.115&uamb=0&uam=&uap=macOS&uapv=15.3.0&uaw=0&are=1&frm=0&pscdl=noapi&_eu=EBAIAAQ&_s=16&dl=https%3A%2F%2Freplit.com%2F~&dp=%2F%40colincarrier%2FAiMemoryCompanion&dt=replEnvironmentDesktop&sid=1749082004&sct=1&seg=1&_tu=wAQ&en=Agent%20Used&_ee=1&ep.event_category=All&ep.value=0&_et=7803&tfd=352563
Learn more: Changes to Chrome's treatment of third-party cookies
Setting cookie in cross-site context may be impacted on Chrome
Cookies with the SameSite=None; Secure and not Partitioned attributes that operate in cross-site contexts are third-party cookies. Chrome is moving towards a new experience that allows users to choose to browse without third-party cookies

Learn more from the linked article about preparing your site to avoid potential breakage.

2 cookies
Learn more: Changes to Chrome's treatment of third-party cookies